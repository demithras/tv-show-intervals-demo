name: PR Database Tests

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Run BDD Tests
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Run database migrations
        run: |
          # Apply the schema to the Neon branch database using the full connection URL
          psql "${{ steps.create_neon_branch.outputs.db_url_with_pooler }}" -f schema.sql

      - name: Run BDD tests
        env:
          # Use the full database URL for Python connection
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
        run: |
          # Run pytest with BDD tests
          pytest -v --tb=short --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-pr-${{ github.event.number }}
          path: test-results.xml

      - name: Comment test results on PR
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: BDD Test Results
          path: test-results.xml
          reporter: java-junit

  cleanup:
    name: Delete Neon Branch
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}