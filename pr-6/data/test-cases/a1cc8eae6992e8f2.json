{"uid":"a1cc8eae6992e8f2","name":"Verify no gaps in the schedule coverage","fullName":"features/data_integrity.feature:Verify no gaps in the schedule coverage","historyId":"c4b226801715cdc7260f79739a713243.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757689518830,"stop":1757689519171,"duration":341},"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","descriptionHtml":"<p>As a TV scheduling system administrator<br />\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table<br />\nSo that I can maintain data consistency and completeness across the system</p>\n","status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and  \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and  '])","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_data_integrity.py:270: in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\nE   AssertionError: Schedule has overlaps: Overlap between Late Night Talk and  \nE   assert 1 == 0\nE    +  where 1 = len(['Overlap between Late Night Talk and  '])","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and  \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and  '])","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_data_integrity.py:270: in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\nE   AssertionError: Schedule has overlaps: Overlap between Late Night Talk and  \nE   assert 1 == 0\nE    +  where 1 = len(['Overlap between Late Night Talk and  '])","steps":[{"name":"Given the database is clean with test data loaded","time":{"start":1757689518830,"stop":1757689519000,"duration":170},"status":"passed","steps":[],"attachments":[{"uid":"be6ff8f48a3f9355","name":"Database State","source":"be6ff8f48a3f9355.txt","type":"text/plain","size":37}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f013affce50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I analyze the schedule coverage","time":{"start":1757689519000,"stop":1757689519169,"duration":169},"status":"passed","steps":[],"attachments":[{"uid":"eb4d7e3790985c9d","name":"Schedule Coverage Analysis","source":"eb4d7e3790985c9d.txt","type":"text/plain","size":79}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f013affce50; closed: 0>"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the schedule should cover the full 24-hour period without gaps","time":{"start":1757689519169,"stop":1757689519170,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"2f183a73e6a6daab","name":"Schedule Gap Analysis","source":"2f183a73e6a6daab.txt","type":"text/plain","size":35}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': ['Overlap between Late Night Talk and  '], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 1))]), RealDictRow([('program_name', ' '), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"And the schedule should have no overlapping programs","time":{"start":1757689519170,"stop":1757689519171,"duration":1},"status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and  \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and  '])\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_data_integrity.py\", line 270, in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\n","steps":[],"attachments":[{"uid":"9be052feed4b648","name":"Schedule Overlap Analysis","source":"9be052feed4b648.txt","type":"text/plain","size":74}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': ['Overlap between Late Night Talk and  '], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 1))]), RealDictRow([('program_name', ' '), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2778-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Data Integrity Between Programs and Program Intervals Tables"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"e1ac0962bc76ae45","status":"passed","time":{"start":1757689390067,"stop":1757689390390,"duration":323}},{"uid":"2f59f872947dae9d","status":"failed","statusDetails":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and '])","time":{"start":1757622049362,"stop":1757622051572,"duration":2210}}]},"tags":[]},"source":"a1cc8eae6992e8f2.json","parameterValues":[]}