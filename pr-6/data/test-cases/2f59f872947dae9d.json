{"uid":"2f59f872947dae9d","name":"Verify no gaps in the schedule coverage","fullName":"features/data_integrity.feature:Verify no gaps in the schedule coverage","historyId":"c4b226801715cdc7260f79739a713243.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757622049362,"stop":1757622051572,"duration":2210},"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","descriptionHtml":"<p>As a TV scheduling system administrator<br />\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table<br />\nSo that I can maintain data consistency and completeness across the system</p>\n","status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and '])","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_data_integrity.py:256: in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\nE   AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nE   assert 1 == 0\nE    +  where 1 = len(['Overlap between Late Night Talk and '])","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and '])","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_data_integrity.py:256: in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\nE   AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nE   assert 1 == 0\nE    +  where 1 = len(['Overlap between Late Night Talk and '])","steps":[{"name":"Given the database is clean","time":{"start":1757622049362,"stop":1757622049743,"duration":381},"status":"passed","steps":[],"attachments":[{"uid":"3a8c14c9e416a001","name":"Database State","source":"3a8c14c9e416a001.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f09a7ef5e50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"And I load the full day programming schedule from CSV file \"full_day_programs.csv\"","time":{"start":1757622049743,"stop":1757622051474,"duration":1731},"status":"passed","steps":[],"attachments":[{"uid":"16b278a80830152a","name":"Full Day Schedule Loaded from CSV","source":"16b278a80830152a.txt","type":"text/plain","size":518},{"uid":"4ef0d0a69f5c314c","name":"Load Summary","source":"4ef0d0a69f5c314c.txt","type":"text/plain","size":25},{"uid":"bd580c8d932ae395","name":"Source File","source":"bd580c8d932ae395.txt","type":"text/plain","size":31}],"parameters":[{"name":"csv_filename","value":"'full_day_programs.csv'"},{"name":"clean_database","value":"<cursor object at 0x7f09a7ef5e50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":3,"hasContent":true},{"name":"When I analyze the schedule coverage","time":{"start":1757622051475,"stop":1757622051570,"duration":95},"status":"passed","steps":[],"attachments":[{"uid":"38b8b8bb458e9f10","name":"Schedule Coverage Analysis","source":"38b8b8bb458e9f10.txt","type":"text/plain","size":78}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f09a7ef5e50; closed: 0>"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the schedule should cover the full 24-hour period without gaps","time":{"start":1757622051570,"stop":1757622051571,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"9da824789aa45d8","name":"Schedule Gap Analysis","source":"9da824789aa45d8.txt","type":"text/plain","size":35}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': ['Overlap between Late Night Talk and '], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 1))]), RealDictRow([('program_name', ''), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"And the schedule should have no overlapping programs","time":{"start":1757622051571,"stop":1757622051572,"duration":1},"status":"failed","statusMessage":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and '])\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_data_integrity.py\", line 256, in verify_no_schedule_overlaps\n    assert len(overlaps) == 0, f\"Schedule has overlaps: {'; '.join(overlaps)}\"\n","steps":[],"attachments":[{"uid":"b08e97deb7cf0a3","name":"Schedule Overlap Analysis","source":"b08e97deb7cf0a3.txt","type":"text/plain","size":73}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': ['Overlap between Late Night Talk and '], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 1))]), RealDictRow([('program_name', ''), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":7,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2756-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Data Integrity Between Programs and Program Intervals Tables"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2f59f872947dae9d.json","parameterValues":[]}