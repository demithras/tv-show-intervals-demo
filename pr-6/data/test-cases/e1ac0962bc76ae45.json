{"uid":"e1ac0962bc76ae45","name":"Verify no gaps in the schedule coverage","fullName":"features/data_integrity.feature:Verify no gaps in the schedule coverage","historyId":"c4b226801715cdc7260f79739a713243.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757689390067,"stop":1757689390390,"duration":323},"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","descriptionHtml":"<p>As a TV scheduling system administrator<br />\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table<br />\nSo that I can maintain data consistency and completeness across the system</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system administrator\nI want to ensure that all programs in the programs table have corresponding entries in the program_intervals table\nSo that I can maintain data consistency and completeness across the system","status":"passed","steps":[{"name":"Given the database is clean with test data loaded","time":{"start":1757689390067,"stop":1757689390228,"duration":161},"status":"passed","steps":[],"attachments":[{"uid":"f7401c1121afec18","name":"Database State","source":"f7401c1121afec18.txt","type":"text/plain","size":37}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f03f3db0e50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I analyze the schedule coverage","time":{"start":1757689390229,"stop":1757689390389,"duration":160},"status":"passed","steps":[],"attachments":[{"uid":"c09d0e238f6a6bb5","name":"Schedule Coverage Analysis","source":"c09d0e238f6a6bb5.txt","type":"text/plain","size":31}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7f03f3db0e50; closed: 0>"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the schedule should cover the full 24-hour period without gaps","time":{"start":1757689390389,"stop":1757689390390,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"bedd7a0f54288282","name":"Schedule Gap Analysis","source":"bedd7a0f54288282.txt","type":"text/plain","size":35}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': [], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 0))]), RealDictRow([('program_name', 'Late Night Movies'), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"And the schedule should have no overlapping programs","time":{"start":1757689390390,"stop":1757689390390,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"213f38c2ef01e8a3","name":"Schedule Overlap Analysis","source":"213f38c2ef01e8a3.txt","type":"text/plain","size":26}],"parameters":[{"name":"test_context","value":"{'gaps': [], 'overlaps': [], 'sorted_programs': [RealDictRow([('program_name', 'Early Morning News'), ('start_time', datetime.time(0, 0)), ('end_time', datetime.time(6, 0))]), RealDictRow([('program_name', 'Morning Show'), ('start_time', datetime.time(6, 0)), ('end_time', datetime.time(9, 0))]), RealDictRow([('program_name', 'Talk Show Hour'), ('start_time', datetime.time(9, 0)), ('end_time', datetime.time(10, 0))]), RealDictRow([('program_name', 'Game Show Classic'), ('start_time', datetime.time(10, 0)), ('end_time', datetime.time(10, 30))]), RealDictRow([('program_name', 'Shopping Network'), ('start_time', datetime.time(10, 30)), ('end_time', datetime.time(12, 0))]), RealDictRow([('program_name', 'Lunch Break News'), ('start_time', datetime.time(12, 0)), ('end_time', datetime.time(12, 30))]), RealDictRow([('program_name', 'Afternoon Drama'), ('start_time', datetime.time(12, 30)), ('end_time', datetime.time(13, 30))]), RealDictRow([('program_name', 'Soap Opera Daily'), ('start_time', datetime.time(13, 30)), ('end_time', datetime.time(14, 30))]), RealDictRow([('program_name', 'Cooking Show'), ('start_time', datetime.time(14, 30)), ('end_time', datetime.time(15, 0))]), RealDictRow([('program_name', 'Documentary Hour'), ('start_time', datetime.time(15, 0)), ('end_time', datetime.time(16, 0))]), RealDictRow([('program_name', 'Kids After School'), ('start_time', datetime.time(16, 0)), ('end_time', datetime.time(17, 0))]), RealDictRow([('program_name', 'Local News'), ('start_time', datetime.time(17, 0)), ('end_time', datetime.time(17, 30))]), RealDictRow([('program_name', 'Evening Magazine'), ('start_time', datetime.time(17, 30)), ('end_time', datetime.time(18, 0))]), RealDictRow([('program_name', 'Prime Time Drama'), ('start_time', datetime.time(18, 0)), ('end_time', datetime.time(19, 0))]), RealDictRow([('program_name', 'Comedy Hour'), ('start_time', datetime.time(19, 0)), ('end_time', datetime.time(20, 0))]), RealDictRow([('program_name', 'Reality Show'), ('start_time', datetime.time(20, 0)), ('end_time', datetime.time(21, 0))]), RealDictRow([('program_name', 'Late Night Talk'), ('start_time', datetime.time(21, 0)), ('end_time', datetime.time(22, 0))]), RealDictRow([('program_name', 'Late Night Movies'), ('start_time', datetime.time(22, 0)), ('end_time', datetime.time(0, 0))])]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Data Integrity Between Programs and Program Intervals Tables"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"2f59f872947dae9d","status":"failed","statusDetails":"AssertionError: Schedule has overlaps: Overlap between Late Night Talk and \nassert 1 == 0\n +  where 1 = len(['Overlap between Late Night Talk and '])","time":{"start":1757622049362,"stop":1757622051572,"duration":2210}}]},"tags":[]},"source":"e1ac0962bc76ae45.json","parameterValues":[]}