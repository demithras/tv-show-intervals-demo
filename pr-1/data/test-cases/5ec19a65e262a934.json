{"uid":"5ec19a65e262a934","name":"Multiple boundary cases in one test","fullName":"features/tv_intervals.feature:Multiple boundary cases in one test","historyId":"957918416ae7207c94b20943ab85e7a6.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364084391,"stop":1757364085907,"duration":1516},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:172: in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nE   assert 1 == 0","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:172: in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nE   assert 1 == 0","steps":[{"name":"Given the database is clean","time":{"start":1757364084391,"stop":1757364084820,"duration":429},"status":"passed","steps":[],"attachments":[{"uid":"3c0302d7e4612913","name":"Database State","source":"3c0302d7e4612913.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fad77597a50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have the following programs:","time":{"start":1757364084821,"stop":1757364084821,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"d0c0d52b72d12af5","name":"Data table","source":"d0c0d52b72d12af5.csv","type":"text/csv","size":259},{"uid":"b982ccf01be9ddab","name":"Programs Data","source":"b982ccf01be9ddab.txt","type":"text/plain","size":242}],"parameters":[{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"When I insert all programs into the database","time":{"start":1757364084821,"stop":1757364085799,"duration":978},"status":"passed","steps":[],"attachments":[{"uid":"25cf43c0c7e7e334","name":"Database Operations","source":"25cf43c0c7e7e334.txt","type":"text/plain","size":134}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fad77597a50; closed: 0>"},{"name":"test_context","value":"{'programs': [{'name': 'Edge Case 1', 'start_time': '12:00', 'end_time': '12:14'}, {'name': 'Edge Case 2', 'start_time': '12:00', 'end_time': '12:15'}, {'name': 'Edge Case 3', 'start_time': '12:00', 'end_time': '12:16'}, {'name': 'Edge Case 4', 'start_time': '12:00', 'end_time': '12:29'}, {'name': 'Edge Case 5', 'start_time': '12:00', 'end_time': '12:30'}, {'name': 'Edge Case 6', 'start_time': '12:00', 'end_time': '12:31'}, {'name': 'Edge Case 7', 'start_time': '12:00', 'end_time': '12:44'}, {'name': 'Edge Case 8', 'start_time': '12:00', 'end_time': '12:45'}, {'name': 'Edge Case 9', 'start_time': '12:00', 'end_time': '12:46'}]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the interval counts should be:","time":{"start":1757364085799,"stop":1757364085907,"duration":108},"status":"failed","statusMessage":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 172, in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"f8a313457bf4d371","name":"Data table","source":"f8a313457bf4d371.csv","type":"text/csv","size":159}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fad77597a50; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2898-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":11},"items":[{"uid":"78c9797f69044bc5","status":"failed","statusDetails":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","time":{"start":1757363895675,"stop":1757363897226,"duration":1551}},{"uid":"bfea565745689f0d","status":"failed","statusDetails":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","time":{"start":1757363798681,"stop":1757363800422,"duration":1741}},{"uid":"f005ca59f2d2ab26","status":"passed","time":{"start":1757363428834,"stop":1757363431260,"duration":2426}},{"uid":"271c1908c9c7ed7","status":"failed","statusDetails":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","time":{"start":1757363039897,"stop":1757363041835,"duration":1938}},{"uid":"34118e9d11e56adf","status":"failed","statusDetails":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","time":{"start":1757362496919,"stop":1757362499124,"duration":2205}},{"uid":"3485b980dce1d61d","status":"passed","time":{"start":1757362295794,"stop":1757362298501,"duration":2707}},{"uid":"1771e170b1b06f80","status":"passed","time":{"start":1757361794863,"stop":1757361796927,"duration":2064}},{"uid":"a984a536c249a450","status":"failed","statusDetails":"AssertionError: Expected 0 intervals for 'Edge Case 1', got 1\nassert 1 == 0","time":{"start":1757361262585,"stop":1757361264739,"duration":2154}},{"uid":"f64da53bdbc21a62","status":"passed","time":{"start":1757360838356,"stop":1757360840813,"duration":2457}},{"uid":"feae1098dbd8e0f1","status":"passed","time":{"start":1757360227298,"stop":1757360230433,"duration":3135}}]},"tags":[]},"source":"5ec19a65e262a934.json","parameterValues":[]}