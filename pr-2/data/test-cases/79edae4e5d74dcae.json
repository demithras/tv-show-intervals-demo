{"uid":"79edae4e5d74dcae","name":"Program name change updates intervals table","fullName":"features/tv_intervals.feature:Program name change updates intervals table","historyId":"9f91944dca5633f43accfc5b3afc933c.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364735026,"stop":1757364735592,"duration":566},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 3 intervals for 'Old Name', got 4\nassert 4 == 3","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 3 intervals for 'Old Name', got 4\nE   assert 4 == 3","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 3 intervals for 'Old Name', got 4\nassert 4 == 3","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 3 intervals for 'Old Name', got 4\nE   assert 4 == 3","steps":[{"name":"Given the database is clean","time":{"start":1757364735026,"stop":1757364735400,"duration":374},"status":"passed","steps":[],"attachments":[{"uid":"fbf8f32bb5865a13","name":"Database State","source":"fbf8f32bb5865a13.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a5650; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have a program \"Old Name\" that runs from \"14:00\" to \"14:45\"","time":{"start":1757364735401,"stop":1757364735401,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"3815ff62d58b92a1","name":"Program Definition","source":"3815ff62d58b92a1.txt","type":"text/plain","size":41}],"parameters":[{"name":"program_name","value":"'Old Name'"},{"name":"start_time","value":"'14:00'"},{"name":"end_time","value":"'14:45'"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I insert the program into the database","time":{"start":1757364735401,"stop":1757364735497,"duration":96},"status":"passed","steps":[],"attachments":[{"uid":"e197e77bf1e0ca8f","name":"Database Operation","source":"e197e77bf1e0ca8f.txt","type":"text/plain","size":18}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a5650; closed: 0>"},{"name":"test_context","value":"{'program': {'name': 'Old Name', 'start_time': '14:00', 'end_time': '14:45'}}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the program \"Old Name\" should have 3 intervals","time":{"start":1757364735497,"stop":1757364735592,"duration":95},"status":"failed","statusMessage":"AssertionError: Expected 3 intervals for 'Old Name', got 4\nassert 4 == 3\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 151, in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"c410fc9f59e8cafd","name":"Interval Verification","source":"c410fc9f59e8cafd.txt","type":"text/plain","size":39}],"parameters":[{"name":"program_name","value":"'Old Name'"},{"name":"expected_intervals","value":"3"},{"name":"clean_database","value":"<cursor object at 0x7fee693a5650; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I rename the program \"Old Name\" to \"New Name\"","time":{"start":1757364735991,"stop":1757364735991,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the program \"New Name\" should have 3 intervals","time":{"start":1757364735991,"stop":1757364735991,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And there should be no intervals for program \"Old Name\"","time":{"start":1757364735991,"stop":1757364735991,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"79edae4e5d74dcae.json","parameterValues":[]}