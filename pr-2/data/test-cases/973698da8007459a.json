{"uid":"973698da8007459a","name":"Deleting a program removes its intervals","fullName":"features/tv_intervals.feature:Deleting a program removes its intervals","historyId":"6358922ce574963eb6f7d82098974e95.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364734061,"stop":1757364734626,"duration":565},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Temporary Show', got 6\nassert 6 == 4","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 4 intervals for 'Temporary Show', got 6\nE   assert 6 == 4","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Temporary Show', got 6\nassert 6 == 4","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 4 intervals for 'Temporary Show', got 6\nE   assert 6 == 4","steps":[{"name":"Given the database is clean","time":{"start":1757364734061,"stop":1757364734435,"duration":374},"status":"passed","steps":[],"attachments":[{"uid":"69a1c0316bfe1ccf","name":"Database State","source":"69a1c0316bfe1ccf.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a4f50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have a program \"Temporary Show\" that runs from \"15:00\" to \"16:00\"","time":{"start":1757364734435,"stop":1757364734436,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"d14a64005f8aabc0","name":"Program Definition","source":"d14a64005f8aabc0.txt","type":"text/plain","size":47}],"parameters":[{"name":"program_name","value":"'Temporary Show'"},{"name":"start_time","value":"'15:00'"},{"name":"end_time","value":"'16:00'"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I insert the program into the database","time":{"start":1757364734436,"stop":1757364734531,"duration":95},"status":"passed","steps":[],"attachments":[{"uid":"f8237f0ded648ba7","name":"Database Operation","source":"f8237f0ded648ba7.txt","type":"text/plain","size":24}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a4f50; closed: 0>"},{"name":"test_context","value":"{'program': {'name': 'Temporary Show', 'start_time': '15:00', 'end_time': '16:00'}}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the program \"Temporary Show\" should have 4 intervals","time":{"start":1757364734531,"stop":1757364734626,"duration":95},"status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Temporary Show', got 6\nassert 6 == 4\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 151, in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"5d179be466f1c2","name":"Interval Verification","source":"5d179be466f1c2.txt","type":"text/plain","size":45}],"parameters":[{"name":"program_name","value":"'Temporary Show'"},{"name":"expected_intervals","value":"4"},{"name":"clean_database","value":"<cursor object at 0x7fee693a4f50; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I delete the program \"Temporary Show\"","time":{"start":1757364735024,"stop":1757364735024,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then there should be no intervals for program \"Temporary Show\"","time":{"start":1757364735024,"stop":1757364735024,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"973698da8007459a.json","parameterValues":[]}