{"uid":"7e23d93464b5e041","name":"Program exactly 29 minutes should have one interval","fullName":"features/tv_intervals.feature:Program exactly 29 minutes should have one interval","historyId":"67f71e1e0f6240a80f689cff2f914d62.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364971066,"stop":1757364971643,"duration":577},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nassert 2 == 1","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nE   assert 2 == 1","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nassert 2 == 1","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nE   assert 2 == 1","steps":[{"name":"Given the database is clean","time":{"start":1757364971066,"stop":1757364971449,"duration":383},"status":"passed","steps":[],"attachments":[{"uid":"50635bb812105732","name":"Database State","source":"50635bb812105732.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7ff871ef5d50; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have a program \"Almost 30 Min\" that runs from \"10:00\" to \"10:29\"","time":{"start":1757364971449,"stop":1757364971449,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"11f1f4ffa5361808","name":"Program Definition","source":"11f1f4ffa5361808.txt","type":"text/plain","size":46}],"parameters":[{"name":"program_name","value":"'Almost 30 Min'"},{"name":"start_time","value":"'10:00'"},{"name":"end_time","value":"'10:29'"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I insert the program into the database","time":{"start":1757364971449,"stop":1757364971546,"duration":97},"status":"passed","steps":[],"attachments":[{"uid":"f0811fc27a0fd142","name":"Database Operation","source":"f0811fc27a0fd142.txt","type":"text/plain","size":23}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7ff871ef5d50; closed: 0>"},{"name":"test_context","value":"{'program': {'name': 'Almost 30 Min', 'start_time': '10:00', 'end_time': '10:29'}}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the program \"Almost 30 Min\" should have 1 intervals","time":{"start":1757364971547,"stop":1757364971643,"duration":96},"status":"failed","statusMessage":"AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nassert 2 == 1\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 151, in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"91df007c37ac5ab","name":"Interval Verification","source":"91df007c37ac5ab.txt","type":"text/plain","size":44}],"parameters":[{"name":"program_name","value":"'Almost 30 Min'"},{"name":"expected_intervals","value":"1"},{"name":"clean_database","value":"<cursor object at 0x7ff871ef5d50; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2755-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"48f43215b79bcecc","status":"failed","statusDetails":"AssertionError: Expected 1 intervals for 'Almost 30 Min', got 2\nassert 2 == 1","time":{"start":1757364737901,"stop":1757364738466,"duration":565}}]},"tags":[]},"source":"7e23d93464b5e041.json","parameterValues":[]}