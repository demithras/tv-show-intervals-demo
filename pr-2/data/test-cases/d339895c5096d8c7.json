{"uid":"d339895c5096d8c7","name":"Multiple programs with different interval counts","fullName":"features/tv_intervals.feature:Multiple programs with different interval counts","historyId":"41bf9fac36398931a44f83efad83896b.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364730990,"stop":1757364731839,"duration":849},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Morning Show', got 6\nassert 6 == 4","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:172: in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 4 intervals for 'Morning Show', got 6\nE   assert 6 == 4","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Morning Show', got 6\nassert 6 == 4","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:172: in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 4 intervals for 'Morning Show', got 6\nE   assert 6 == 4","steps":[{"name":"Given the database is clean","time":{"start":1757364730991,"stop":1757364731365,"duration":374},"status":"passed","steps":[],"attachments":[{"uid":"54afaee50868142a","name":"Database State","source":"54afaee50868142a.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a4150; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have the following programs:","time":{"start":1757364731365,"stop":1757364731366,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"4f9608ba32ad317c","name":"Data table","source":"4f9608ba32ad317c.csv","type":"text/csv","size":135},{"uid":"9362f70e28335126","name":"Programs Data","source":"9362f70e28335126.txt","type":"text/plain","size":108}],"parameters":[{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"When I insert all programs into the database","time":{"start":1757364731366,"stop":1757364731744,"duration":378},"status":"passed","steps":[],"attachments":[{"uid":"f0d3f9754c6503f3","name":"Database Operations","source":"f0d3f9754c6503f3.txt","type":"text/plain","size":70}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a4150; closed: 0>"},{"name":"test_context","value":"{'programs': [{'name': 'Morning Show', 'start_time': '07:00', 'end_time': '08:00'}, {'name': 'News Brief', 'start_time': '12:00', 'end_time': '12:05'}, {'name': 'Evening Movie', 'start_time': '20:00', 'end_time': '22:15'}, {'name': 'Night Talk', 'start_time': '23:45', 'end_time': '00:30'}]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the interval counts should be:","time":{"start":1757364731744,"stop":1757364731839,"duration":95},"status":"failed","statusMessage":"AssertionError: Expected 4 intervals for 'Morning Show', got 6\nassert 6 == 4\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 172, in check_multiple_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"4cdcfc1808ccb7e9","name":"Data table","source":"4cdcfc1808ccb7e9.csv","type":"text/csv","size":85}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee693a4150; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d339895c5096d8c7.json","parameterValues":[]}