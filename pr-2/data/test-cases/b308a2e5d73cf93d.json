{"uid":"b308a2e5d73cf93d","name":"Program spanning multiple intervals with partial duration","fullName":"features/tv_intervals.feature:Program spanning multiple intervals with partial duration","historyId":"824e96cacdd9b6048fb86fb7a6b0d4d9.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1757364728083,"stop":1757364728648,"duration":565},"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","descriptionHtml":"<p>As a TV scheduling system<br />\nI want to automatically calculate 15-minute intervals for programs<br />\nSo that I can track program duration in standardized time blocks</p>\n","status":"failed","statusMessage":"AssertionError: Expected 2 intervals for 'Movie Night', got 4\nassert 4 == 2","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 2 intervals for 'Movie Night', got 4\nE   assert 4 == 2","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"As a TV scheduling system\nI want to automatically calculate 15-minute intervals for programs\nSo that I can track program duration in standardized time blocks","status":"failed","statusMessage":"AssertionError: Expected 2 intervals for 'Movie Night', got 4\nassert 4 == 2","statusTrace":"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\ntest_tv_intervals.py:151: in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\nE   AssertionError: Expected 2 intervals for 'Movie Night', got 4\nE   assert 4 == 2","steps":[{"name":"Given the database is clean","time":{"start":1757364728084,"stop":1757364728458,"duration":374},"status":"passed","steps":[],"attachments":[{"uid":"2a6171e2ce5257e","name":"Database State","source":"2a6171e2ce5257e.txt","type":"text/plain","size":29}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee697a6850; closed: 0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Given I have a program \"Movie Night\" that runs from \"21:00\" to \"21:40\"","time":{"start":1757364728458,"stop":1757364728458,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"9bce0ccd3a99111e","name":"Program Definition","source":"9bce0ccd3a99111e.txt","type":"text/plain","size":44}],"parameters":[{"name":"program_name","value":"'Movie Night'"},{"name":"start_time","value":"'21:00'"},{"name":"end_time","value":"'21:40'"},{"name":"test_context","value":"{}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I insert the program into the database","time":{"start":1757364728458,"stop":1757364728553,"duration":95},"status":"passed","steps":[],"attachments":[{"uid":"41b0b76136b186ac","name":"Database Operation","source":"41b0b76136b186ac.txt","type":"text/plain","size":21}],"parameters":[{"name":"clean_database","value":"<cursor object at 0x7fee697a6850; closed: 0>"},{"name":"test_context","value":"{'program': {'name': 'Movie Night', 'start_time': '21:00', 'end_time': '21:40'}}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then the program \"Movie Night\" should have 2 intervals","time":{"start":1757364728554,"stop":1757364728648,"duration":94},"status":"failed","statusMessage":"AssertionError: Expected 2 intervals for 'Movie Night', got 4\nassert 4 == 2\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/tv-show-intervals-demo/tv-show-intervals-demo/test_tv_intervals.py\", line 151, in check_program_intervals\n    assert actual_intervals == expected_intervals, \\\n","steps":[],"attachments":[{"uid":"a2872406a49b3b33","name":"Interval Verification","source":"a2872406a49b3b33.txt","type":"text/plain","size":42}],"parameters":[{"name":"program_name","value":"'Movie Night'"},{"name":"expected_intervals","value":"2"},{"name":"clean_database","value":"<cursor object at 0x7fee697a6850; closed: 0>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"TV Program 15-Minute Interval Calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b308a2e5d73cf93d.json","parameterValues":[]}